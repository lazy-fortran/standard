================================================================================
FORTRAN 77 structured programming revolution
================================================================================

      CHARACTER*20 NAME
      INTEGER I
      LOGICAL FLAG
      
      NAME = 'HELLO WORLD'
      I = 10
      FLAG = .TRUE.
      
      IF (FLAG .AND. I .GT. 5) THEN
          PRINT *, NAME
          I = I + 1
      ELSE
          PRINT *, 'NOT TRUE'
      ENDIF
      
      DO WHILE (I .LE. 15)
          I = I + 1
      ENDDO
      
      END

--------------------------------------------------------------------------------

(program
  (program_unit
    (main_program
      (statement_without_end
        (specification_statement
          (character_declaration
            (character_length)
            (variable_name))))
      (statement_without_end
        (specification_statement
          (implicit_specification
            (type_spec)
            (letter_range))))
      (statement_without_end
        (specification_statement
          (implicit_specification
            (type_spec)
            (letter_range))))
      (statement_without_end
        (arithmetic_statement
          (assignment_statement
            (variable
              (simple_variable))
            (expression
              (character_expression
                (character_constant))))))
      (statement_without_end
        (arithmetic_statement
          (assignment_statement
            (variable
              (simple_variable))
            (expression
              (arithmetic_expression
                (term
                  (factor
                    (primary
                      (constant
                        (integer_constant))))))))))
      (statement_without_end
        (arithmetic_statement
          (assignment_statement
            (variable
              (simple_variable))
            (expression
              (logical_expression
                (logical_primary
                  (logical_constant)))))))
      (statement_without_end
        (control_statement
          (if_construct
            (if_then_statement
              (logical_expression
                (logical_and_expression
                  (logical_expression
                    (logical_primary
                      (logical_variable)))
                  (logical_expression
                    (relational_expression
                      (arithmetic_expression
                        (term
                          (factor
                            (primary
                              (variable
                                (simple_variable))))))
                      (relational_operator)
                      (arithmetic_expression
                        (term
                          (factor
                            (primary
                              (constant
                                (integer_constant)))))))))))
            (statement_without_end
              (io_statement
                (print_statement
                  (integer_constant)
                  (io_list
                    (variable
                      (simple_variable))))))
            (statement_without_end
              (arithmetic_statement
                (assignment_statement
                  (variable
                    (simple_variable))
                  (expression
                    (arithmetic_expression
                      (arithmetic_expression
                        (term
                          (factor
                            (primary
                              (variable
                                (simple_variable))))))
                      (term
                        (factor
                          (primary
                            (constant
                              (integer_constant))))))))))
            (else_statement)
            (statement_without_end
              (io_statement
                (print_statement
                  (integer_constant)
                  (io_list
                    (variable
                      (character_constant))))))
            (endif_statement))))
      (statement_without_end
        (control_statement
          (do_while_construct
            (do_while_statement
              (logical_expression
                (relational_expression
                  (arithmetic_expression
                    (term
                      (factor
                        (primary
                          (variable
                            (simple_variable))))))
                  (relational_operator)
                  (arithmetic_expression
                    (term
                      (factor
                        (primary
                          (constant
                            (integer_constant)))))))))
            (statement_without_end
              (arithmetic_statement
                (assignment_statement
                  (variable
                    (simple_variable))
                  (expression
                    (arithmetic_expression
                      (arithmetic_expression
                        (term
                          (factor
                            (primary
                              (variable
                                (simple_variable))))))
                      (term
                        (factor
                          (primary
                            (constant
                              (integer_constant))))))))))
            (enddo_statement))))
      (end_statement))))